/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing
**
** This file is part of the Qt Build Suite.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms and
** conditions see http://www.qt.io/terms-conditions. For further information
** use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 or version 3 as published by the Free
** Software Foundation and appearing in the file LICENSE.LGPLv21 and
** LICENSE.LGPLv3 included in the packaging of this file.  Please review the
** following information to ensure the GNU Lesser General Public License
** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, The Qt Company gives you certain additional
** rights.  These rights are described in The Qt Company LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/

/*!
    \contentspage index.html
    \page jsextension-environment.html
    \ingroup list-of-builtin-services

    \title Environment Service
    \brief Provides operations on the system environment.

    The \c Environment service offers access to the system environment or process environment.

    \section1 Available Operations

    \section2 currentEnv
    \code
    Environment.currentEnv(): { [key: string]: string; }
    \endcode
    Returns the environment of \QBS in the current context as an object whose properties are
    the environment variables.

    \section2 getEnv
    \code
    Environment.getEnv(key: string): string
    \endcode
    Tries to find a variable with the given name in the current context's environment and returns
    its value. If no such variable could be found, \c undefined is returned.

    \section2 putEnv
    \code
    Environment.putEnv(key: string, value: string): void
    \endcode
    Sets the value of the environment variable with the given name in the build or run environment.
    This method is only available in the \c Module.setupBuildEnvironment and
    \c Module.setupRunEnvironment scripts.

    \section2 unsetEnv
    \code
    Environment.unsetEnv(key: string): void
    \endcode
    Unsets the environment variable with the given name from the build or run environment.
    This method is only available in the \c Module.setupBuildEnvironment and
    \c Module.setupRunEnvironment scripts.
*/
